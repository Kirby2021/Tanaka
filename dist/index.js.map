{"version":3,"sources":["index.js"],"names":["ShardingManager","require","Client","logger","join","manager","__dirname","token","process","env","DISCORD_TOKEN","client","shardCount","ipcSocket","timeout","spawn","then","info","catch","reason","error"],"mappings":"AAAA,MAAMA,gBAAEA,iBAAoBC,QAAQ,YAC9BC,OAASD,QAAQ,uBACjBE,OAASF,QAAQ,wBACjBG,KAAEA,MAASH,QAAQ,QAEnBI,QAAU,IAAIL,gBAAgBI,KAAKE,UAAW,aAAc,eAAgB,CACjFC,MAAOC,QAAQC,IAAIC,cACnBC,OAAQT,OACRU,WAAY,EACZC,UAAW,KACXC,QAAS,MAEVT,QAAQU,QACNC,MAAK,IAAMb,OAAOc,KAAK,gCAAgCZ,QAAQO,gBAC/DM,OAAOC,GAAWhB,OAAOiB,MAAM,2BAA2BD","file":"index.js","sourcesContent":["const { ShardingManager } = require('kurasuta');\nconst Client = require('./Structures/Client');\nconst logger = require('./Structures/Logger');\nconst { join } = require('path');\n\nconst manager = new ShardingManager(join(__dirname, 'Structures', 'BaseCluster'), {\n\ttoken: process.env.DISCORD_TOKEN,\n\tclient: Client,\n\tshardCount: 2,\n\tipcSocket: 9454,\n\ttimeout: 60000,\n});\nmanager.spawn()\n\t.then(() => logger.info(`Spawning shard. Shard count: ${manager.shardCount}`))\n\t.catch((reason) => logger.error(`Spawing error: REASON = ${reason}`));\n"]}