{"version":3,"sources":["Types/code.js"],"names":["ArgumentType","require","codeblock","module","exports","[object Object]","client","super","value","msg","test","channel","messages","fetch","content","code","lang","parsed","exec","toLowerCase"],"mappings":"AAAA,MAAMA,aAAEA,cAAiBC,QAAQ,uBAC3BC,UAAY,mCAElBC,OAAOC,QAAU,cAAuBJ,aACvCK,YAAYC,GACXC,MAAMD,EAAQ,QAGfD,SAASG,GACR,QAAKA,EAKNH,YAAYG,EAAOC,GAClB,IAAKD,EAAO,OAAO,KACnB,GAAI,WAAWE,KAAKF,GACnB,IAECA,SADsBC,EAAIE,QAAQC,SAASC,MAAML,IACjCM,QACf,MACD,MAAO,CAAEC,KAAMP,EAAOQ,KAAM,MAG9B,GAAId,UAAUQ,KAAKF,GAAQ,CAC1B,MAAMS,EAASf,UAAUgB,KAAKV,GAE9B,MAAO,CACNO,KAAME,EAAO,GACbD,KAAMC,EAAO,GAAKA,EAAO,GAAGE,cAAgB,MAI9C,MAAO,CAAEJ,KAAMP,EAAOQ,KAAM","file":"code.js","sourcesContent":["const { ArgumentType } = require('discord.js-commando');\nconst codeblock = /```(?:(\\S+)\\n)?\\s*([^]+?)\\s*```/i;\n\nmodule.exports = class CodeType extends ArgumentType {\n\tconstructor(client) {\n\t\tsuper(client, 'code');\n\t}\n\n\tvalidate(value) {\n\t\tif (!value) return false;\n\n\t\treturn true;\n\t}\n\n\tasync parse(value, msg) {\n\t\tif (!value) return null;\n\t\tif (/^[0-9]+$/.test(value)) {\n\t\t\ttry {\n\t\t\t\tconst message = await msg.channel.messages.fetch(value);\n\t\t\t\tvalue = message.content;\n\t\t\t} catch {\n\t\t\t\treturn { code: value, lang: null };\n\t\t\t}\n\t\t}\n\t\tif (codeblock.test(value)) {\n\t\t\tconst parsed = codeblock.exec(value);\n\n\t\t\treturn {\n\t\t\t\tcode: parsed[2],\n\t\t\t\tlang: parsed[1] ? parsed[1].toLowerCase() : null,\n\t\t\t};\n\t\t}\n\n\t\treturn { code: value, lang: null };\n\t}\n};\n"]}