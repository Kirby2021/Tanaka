{"version":3,"sources":["Types/image.js"],"names":["ArgumentType","require","fileTypeRe","request","module","exports","[object Object]","client","super","value","msg","arg","attachment","attachments","first","size","test","name","toLowerCase","get","this","registry","types","validate","url","parse","displayAvatarURL","format","isEmpty"],"mappings":"AAAA,MAAMA,aAAEA,cAAiBC,QAAQ,uBAC3BC,WAAa,+BACbC,QAAUF,QAAQ,mBAExBG,OAAOC,QAAU,cAAwBL,aACxCM,YAAYC,GACXC,MAAMD,EAAQ,SAQfD,eAAeG,EAAOC,EAAKC,GAC1B,MAAMC,EAAaF,EAAIG,YAAYC,QAEnC,GAAIF,EACH,OAAIA,EAAWG,KAAO,IAAY,wCAC7Bb,WAAWc,KAAKJ,EAAWK,OACxB,2DAIT,GAAIf,WAAWc,KAAKP,EAAMS,eACzB,IAGC,aAFMf,QAAQgB,IAAIV,IAEX,EACN,MACD,OAAO,EAIT,OAAOW,KAAKb,OAAOc,SAASC,MAAMH,IAAI,QAAQI,SAASd,EAAOC,EAAKC,GAQpEL,YAAYG,EAAOC,EAAKC,GACvB,MAAMC,EAAaF,EAAIG,YAAYC,QAEnC,GAAIF,EAAY,OAAOA,EAAWY,IAClC,GAAItB,WAAWc,KAAKP,EAAMS,eAAgB,OAAOT,EAIjD,aAFmBW,KAAKb,OAAOc,SAASC,MAAMH,IAAI,QAAQM,MAAMhB,EAAOC,EAAKC,IAEhEe,iBAAiB,CAAEC,OAAQ,MAAOZ,KAAM,MAQrDT,QAAQG,EAAOC,EAAKC,GACnB,OAAID,EAAIG,YAAYE,MAEbK,KAAKb,OAAOc,SAASC,MAAMH,IAAI,QAAQS,QAAQnB,EAAOC,EAAKC","file":"image.js","sourcesContent":["const { ArgumentType } = require('discord.js-commando');\nconst fileTypeRe = /\\.(jpe?g|png|gif|jfif|bmp)$/i;\nconst request = require('node-superfetch');\n\nmodule.exports = class ImageType extends ArgumentType {\n\tconstructor(client) {\n\t\tsuper(client, 'image');\n\t}\n\n\t/**\n\t * @param {string} value\n\t * @param {import('discord.js-commando').CommandoMessage} msg\n\t * @param {import('discord.js-commando').Argument} arg\n\t */\n\tasync validate(value, msg, arg) {\n\t\tconst attachment = msg.attachments.first();\n\n\t\tif (attachment) {\n\t\t\tif (attachment.size > 8e6) return 'Please provide an image under 8 MB.';\n\t\t\tif (!fileTypeRe.test(attachment.name))\n\t\t\t\treturn 'Please only send PNG, JPG, BMP, or GIF formatted images.';\n\n\t\t\treturn true;\n\t\t}\n\t\tif (fileTypeRe.test(value.toLowerCase())) {\n\t\t\ttry {\n\t\t\t\tawait request.get(value);\n\n\t\t\t\treturn true;\n\t\t\t} catch {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn this.client.registry.types.get('user').validate(value, msg, arg);\n\t}\n\n\t/**\n\t * @param {string} value\n\t * @param {import('discord.js-commando').CommandoMessage} msg\n\t * @param {import('discord.js-commando').Argument} arg\n\t */\n\tasync parse(value, msg, arg) {\n\t\tconst attachment = msg.attachments.first();\n\n\t\tif (attachment) return attachment.url;\n\t\tif (fileTypeRe.test(value.toLowerCase())) return value;\n\n\t\tconst user = await this.client.registry.types.get('user').parse(value, msg, arg);\n\n\t\treturn user.displayAvatarURL({ format: 'png', size: 512 });\n\t}\n\n\t/**\n\t * @param {string} value\n\t * @param {import('discord.js-commando').CommandoMessage} msg\n\t * @param {import('discord.js-commando').Argument} arg\n\t */\n\tisEmpty(value, msg, arg) {\n\t\tif (msg.attachments.size) return false;\n\n\t\treturn this.client.registry.types.get('user').isEmpty(value, msg, arg);\n\t}\n};\n"]}