{"version":3,"sources":["Commands/music/play.js"],"names":["Command","require","MessageEmbed","module","exports","[object Object]","client","super","name","aliases","group","memberName","description","guildOnly","args","key","prompt","type","msg","title","channel","member","voice","reply","player","this","manager","create","guild","id","voiceChannel","textChannel","selfDeafen","res","state","connect","search","author","loadType","queue","current","destroy","exception","err","message","add","tracks","track","playing","paused","size","play","embed","setTitle","setURL","uri","setImage","thumbnail","setAuthor","setColor","setFooter","requester","tag","setTimestamp","totalSize","length","playlist","collected","max","filter","m","test","content","results","slice","map","index","join","say","awaitMessages","time","errors","e","first","toLowerCase","Number"],"mappings":"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","file":"play.js","sourcesContent":["const { Command } = require('discord.js-commando');\nconst { MessageEmbed } = require('discord.js');\n\nmodule.exports = class PlayCommand extends Command {\n\tconstructor(client) {\n\t\tsuper(client, {\n\t\t\tname: 'play',\n\t\t\taliases: ['play-music', 'p'],\n\t\t\tgroup: 'music',\n\t\t\tmemberName: 'play',\n\t\t\tdescription: \"Add's music to the music queue.\",\n\t\t\tguildOnly: true,\n\t\t\targs: [\n\t\t\t\t{\n\t\t\t\t\tkey: 'title',\n\t\t\t\t\tprompt: 'What is the title of the music?',\n\t\t\t\t\ttype: 'string',\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\tasync run(msg, { title }) {\n\t\tconst { channel } = msg.member.voice;\n\n\t\tif (!channel) return msg.reply('You need to join a voice channel!');\n\n\t\tconst player = this.client.manager.create({\n\t\t\tguild: msg.guild.id,\n\t\t\tvoiceChannel: channel.id,\n\t\t\ttextChannel: msg.channel.id,\n\t\t\tselfDeafen: true,\n\t\t});\n\n\t\tif (player.state !== 'CONNECTED') player.connect();\n\n\t\tlet res;\n\n\t\ttry {\n\t\t\tres = await player.search(title, msg.author);\n\n\t\t\tif (res.loadType === 'LOAD_FAILED') {\n\t\t\t\tif (!player.queue.current) player.destroy();\n\n\t\t\t\tthrow res.exception;\n\t\t\t}\n\t\t} catch (err) {\n\t\t\treturn msg.reply(`There was an error while searching: ${err.message}.`);\n\t\t}\n\n\t\tswitch (res.loadType) {\n\t\t\tcase 'NO_MATCHES':\n\t\t\t\tif (!player.queue.current) player.destroy();\n\n\t\t\t\treturn msg.reply('There were no results found.');\n\t\t\tcase 'TRACK_LOADED': {\n\t\t\t\tplayer.queue.add(res.tracks[0]);\n\n\t\t\t\tconst track = res.tracks[0];\n\n\t\t\t\tif (!player.playing && !player.paused && !player.queue.size) player.play();\n\n\t\t\t\tconst embed = new MessageEmbed()\n\t\t\t\t\t.setTitle(`**Adding to queue: __${track.title}__**`)\n\t\t\t\t\t.setURL(track.uri)\n\t\t\t\t\t.setImage(track.thumbnail || '')\n\t\t\t\t\t.setAuthor(track.author)\n\t\t\t\t\t.setColor('RANDOM')\n\t\t\t\t\t.setFooter(`Requested by: ${track.requester.tag}`)\n\t\t\t\t\t.setTimestamp();\n\n\t\t\t\treturn msg.reply(embed);\n\t\t\t}\n\t\t\tcase 'PLAYLIST_LOADED':\n\t\t\t\tplayer.queue.add(res.tracks);\n\n\t\t\t\tif (!player.playing && !player.paused && player.queue.totalSize === res.tracks.length)\n\t\t\t\t\tplayer.play();\n\n\t\t\t\treturn msg.reply(\n\t\t\t\t\t`Queuing playlist \\`${res.playlist.name}\\` with ${res.tracks.length} tracks.`,\n\t\t\t\t);\n\t\t\tcase 'SEARCH_RESULT': {\n\t\t\t\tlet max = 5;\n\t\t\t\tlet collected;\n\t\t\t\tconst filter = (m) => m.author.id === msg.author.id && /^(\\d+|end)$/i.test(m.content);\n\n\t\t\t\tif (res.tracks.length < max) max = res.tracks.length;\n\n\t\t\t\tconst results = `Reply with a number.\\n${res.tracks\n\t\t\t\t\t.slice(0, max)\n\t\t\t\t\t.map((track, index) => `${++index} - \\`${track.title}\\``)\n\t\t\t\t\t.join('\\n')}`;\n\n\t\t\t\tmsg.say(results);\n\n\t\t\t\ttry {\n\t\t\t\t\tcollected = await msg.channel.awaitMessages(filter, {\n\t\t\t\t\t\tmax: 1,\n\t\t\t\t\t\ttime: 30e3,\n\t\t\t\t\t\terrors: ['time'],\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (!player.queue.current) player.destroy();\n\n\t\t\t\t\treturn msg.reply(\"You didn't provide a selection.\");\n\t\t\t\t}\n\n\t\t\t\tconst first = collected.first().content;\n\n\t\t\t\tif (first.toLowerCase() === 'end') {\n\t\t\t\t\tif (!player.queue.current) player.destroy();\n\n\t\t\t\t\treturn msg.say('Cancelled selection.');\n\t\t\t\t}\n\n\t\t\t\tconst index = Number(first) - 1;\n\n\t\t\t\tif (index < 0 || index > max - 1)\n\t\t\t\t\treturn msg.say(`The number you provided is too small or too big (1-${max}).`);\n\n\t\t\t\tconst track = res.tracks[index];\n\t\t\t\tplayer.queue.add(track);\n\n\t\t\t\tif (!player.playing && !player.paused && !player.queue.size) player.play();\n\n\t\t\t\tconst embed = new MessageEmbed()\n\t\t\t\t\t.setTitle(`**Adding to queue: __${track.title}__**`)\n\t\t\t\t\t.setURL(track.uri)\n\t\t\t\t\t.setImage(track.thumbnail || '')\n\t\t\t\t\t.setAuthor(track.author)\n\t\t\t\t\t.setColor('RANDOM')\n\t\t\t\t\t.setFooter(`Requested by: ${track.requester.tag}`)\n\t\t\t\t\t.setTimestamp();\n\n\t\t\t\treturn msg.reply(embed);\n\t\t\t}\n\t\t}\n\t}\n};\n"]}