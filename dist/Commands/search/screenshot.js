const{screenshot:screenshot}=require("../../Structures/Puppeteer"),{isUrl:isUrl}=require("../../Structures/Util"),{Command:Command}=require("discord.js-commando"),{MessageEmbed:MessageEmbed}=require("discord.js"),request=require("node-superfetch"),url=require("url");module.exports=class extends Command{constructor(e){super(e,{name:"screenshot",aliases:["ss"],memberName:"screenshot",group:"search",description:"Screenshots a website.",throttling:{usages:2,duration:60},args:[{key:"link",prompt:"What is the link of the website?",type:"string",validate:e=>isUrl(e)}]}),this.nsfwList=null}async run(e,{link:s}){try{e.channel.startTyping(),this.nsfwList||await this.fetchNSFWList();const t=url.parse(s);if(this.nsfwList.some((e=>t.host===e))&&!e.channel.nsfw)return e.reply("This site is NSFW. Please try again in a NSFW channel.");const{buffer:r,title:n}=await screenshot(s),i=(new MessageEmbed).attachFiles([{attachment:r,name:"screenshot.png"}]).setTitle(n).setImage("attachment://screenshot.png").setColor("RANDOM").setFooter(`Requested by ${e.author.tag}`,e.author.displayAvatarURL({dynamic:!0})).setTimestamp();return e.say(i),e.channel.stopTyping()}catch(s){return this.client.owners[0].send(s.message),e.reply("Couldn't find any results. Invalid URL?"),e.channel.stopTyping()}}async fetchNSFWList(e=!1){if(!e&&this.nsfwList)return this.nsfwList;const{text:s}=await request.get("https://blocklistproject.github.io/Lists/alt-version/porn-nl.txt");return this.nsfwList=s.split("\n").filter((e=>e&&!e.startsWith("#"))).map((e=>e.replace(/^(0.0.0.0)/,""))),this.nsfwList}};
//# sourceMappingURL=screenshot.js.map
