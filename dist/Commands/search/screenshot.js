const{screenshot:screenshot}=require("../../Structures/Puppeteer"),{isUrl:isUrl}=require("../../Structures/Util"),{Command:Command}=require("discord.js-commando"),request=require("node-superfetch"),url=require("url");module.exports=class extends Command{constructor(s){super(s,{name:"screenshot",aliases:["ss"],memberName:"screenshot",group:"search",description:"Screenshots a website.",throttling:{usages:2,duration:60},args:[{key:"link",prompt:"What is the link of the website?",type:"string",validate:s=>isUrl(s)}]}),this.nsfwList=null}async run(s,{link:t}){try{s.channel.startTyping(),this.nsfwList||await this.fetchNSFWList();const e=url.parse(t);if(this.nsfwList.some((s=>e.host===s))&&!s.channel.nsfw)return s.reply("This site is NSFW. Please try again in a NSFW channel.");const n=await screenshot(t);return s.say({files:[{attachment:n,name:"screenshot.png"}]}),s.channel.stopTyping()}catch{return s.reply("Couldn't find any results. Invalid URL?"),s.channel.stopTyping()}}async fetchNSFWList(s=!1){if(!s&&this.nsfwList)return this.nsfwList;const{text:t}=await request.get("https://blocklistproject.github.io/Lists/alt-version/porn-nl.txt");return this.nsfwList=t.split("\n").filter((s=>s&&!s.startsWith("#"))).map((s=>s.replace(/^(0.0.0.0)/,""))),this.nsfwList}};
//# sourceMappingURL=screenshot.js.map
