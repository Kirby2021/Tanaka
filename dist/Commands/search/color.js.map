{"version":3,"sources":["Commands/search/color.js"],"names":["Command","require","MessageEmbed","converter","request","colorRegex","module","exports","[object Object]","client","super","name","aliases","memberName","group","description","args","key","prompt","type","validate","color","test","msg","code","body","get","replace","embed","setTitle","colors","setThumbnail","addField","hex","rgb","hsl","hsv","hwb","cmyk","ansi16","ansi256","lab","hcg","lch","apple","gray","xyz","keyword","setFooter","author","tag","displayAvatarURL","dynamic","setColor","setImage","setTimestamp"],"mappings":"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","file":"color.js","sourcesContent":["const { Command } = require('discord.js-commando');\nconst { MessageEmbed } = require('discord.js');\nconst converter = require('color-convert');\nconst request = require('node-superfetch');\n\nconst colorRegex = /^#([a-f0-9]{3,4}|[a-f0-9]{4}(?:[a-f0-9]{2}){1,2})\\b$/i;\n\nmodule.exports = class ColorCommand extends Command {\n\tconstructor(client) {\n\t\tsuper(client, {\n\t\t\tname: 'color',\n\t\t\taliases: ['colour'],\n\t\t\tmemberName: 'color',\n\t\t\tgroup: 'search',\n\t\t\tdescription: 'Gets info about a color hex code.',\n\t\t\targs: [\n\t\t\t\t{\n\t\t\t\t\tkey: 'color',\n\t\t\t\t\tprompt: 'What is the color?',\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tvalidate: (color) => colorRegex.test(color),\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\tasync run(msg, { color }) {\n\t\tconst code = color;\n\n\t\tconst { body } = await request.get(`https://api.color.pizza/v1/${code.replace('#', '')}`);\n\t\tconst embed = new MessageEmbed()\n\t\t\t.setTitle(body.colors[0].name)\n\t\t\t.setThumbnail(`https://serux.pro/rendercolour?hex=${code.replace('#', '')}`)\n\t\t\t.addField(\n\t\t\t\t'❯ RGB',\n\t\t\t\t`${converter.hex.rgb(code)[0]}, ${converter.hex.rgb(code)[1]}, ${\n\t\t\t\t\tconverter.hex.rgb(code)[2]\n\t\t\t\t}`,\n\t\t\t\ttrue,\n\t\t\t)\n\t\t\t.addField(\n\t\t\t\t'❯ HSL',\n\t\t\t\t`${converter.hex.hsl(code)[0]}, ${converter.hex.hsl(code)[1]}, ${\n\t\t\t\t\tconverter.hex.hsl(code)[2]\n\t\t\t\t}`,\n\t\t\t\ttrue,\n\t\t\t)\n\t\t\t.addField(\n\t\t\t\t'❯ HSV',\n\t\t\t\t`${converter.hex.hsv(code)[0]}, ${converter.hex.hsv(code)[1]}, ${\n\t\t\t\t\tconverter.hex.hsv(code)[2]\n\t\t\t\t}`,\n\t\t\t\ttrue,\n\t\t\t)\n\t\t\t.addField(\n\t\t\t\t'❯ HWB',\n\t\t\t\t`${converter.hex.hwb(code)[0]}, ${converter.hex.hwb(code)[1]}, ${\n\t\t\t\t\tconverter.hex.hwb(code)[2]\n\t\t\t\t}`,\n\t\t\t\ttrue,\n\t\t\t)\n\t\t\t.addField(\n\t\t\t\t'❯ CMYK',\n\t\t\t\t`${converter.hex.cmyk(code)[0]}, ${converter.hex.cmyk(code)[1]}, ${\n\t\t\t\t\tconverter.hex.cmyk(code)[2]\n\t\t\t\t}, ${converter.hex.cmyk(code)[3]}`,\n\t\t\t\ttrue,\n\t\t\t)\n\t\t\t.addField('❯ Ansi 16', converter.hex.ansi16(code), true)\n\t\t\t.addField('❯ Ansi 256', converter.hex.ansi256(code), true)\n\t\t\t.addField('❯ Hex', `#${converter.rgb.hex(converter.hex.rgb(code))}`, true)\n\t\t\t.addField(\n\t\t\t\t'❯ LAB',\n\t\t\t\t`${converter.hex.lab(code)[0]}, ${converter.hex.lab(code)[1]}, ${\n\t\t\t\t\tconverter.hex.lab(code)[2]\n\t\t\t\t}`,\n\t\t\t\ttrue,\n\t\t\t)\n\t\t\t.addField(\n\t\t\t\t'❯ HCG',\n\t\t\t\t`${converter.hex.hcg(code)[0]}, ${converter.hex.hcg(code)[1]}, ${\n\t\t\t\t\tconverter.hex.hcg(code)[2]\n\t\t\t\t}`,\n\t\t\t\ttrue,\n\t\t\t)\n\t\t\t.addField(\n\t\t\t\t'❯ LCH',\n\t\t\t\t`${converter.hex.lch(code)[0]}, ${converter.hex.lch(code)[1]}, ${\n\t\t\t\t\tconverter.hex.lch(code)[2]\n\t\t\t\t}`,\n\t\t\t\ttrue,\n\t\t\t)\n\t\t\t.addField(\n\t\t\t\t'❯ Apple',\n\t\t\t\t`${converter.hex.apple(code)[0]}, ${converter.hex.apple(code)[1]}, ${\n\t\t\t\t\tconverter.hex.apple(code)[2]\n\t\t\t\t}`,\n\t\t\t\ttrue,\n\t\t\t)\n\t\t\t.addField('❯ Gray', converter.hex.gray(code)[0], true)\n\t\t\t.addField(\n\t\t\t\t'❯ XYZ',\n\t\t\t\t`${converter.hex.xyz(code)[0]}, ${converter.hex.xyz(code)[1]}, ${\n\t\t\t\t\tconverter.hex.xyz(code)[2]\n\t\t\t\t}`,\n\t\t\t\ttrue,\n\t\t\t)\n\t\t\t.addField('❯ CSS Keyword', converter.hex.keyword(code), true)\n\t\t\t.setFooter(`Requested by ${msg.author.tag}`, msg.author.displayAvatarURL({ dynamic: true }))\n\t\t\t.setColor(converter.rgb.hex(converter.hex.rgb(code)))\n\t\t\t.setImage(`https://api.alexflipnote.dev/color/image/gradient/${code.replace('#', '')}`)\n\t\t\t.setTimestamp();\n\n\t\tmsg.embed(embed);\n\t}\n};\n"]}