{"version":3,"sources":["Commands/search/screenshot.js"],"names":["isUrl","require","Command","request","WebShot","window","removeTags","removeAttributes","args","height","width","headless","url","module","exports","[object Object]","client","super","name","aliases","memberName","group","description","throttling","usages","duration","key","prompt","type","validate","m","this","nsfwList","msg","link","fetchNSFWList","parsed","parse","some","nsfwURL","host","channel","nsfw","reply","attachment","screenshot","say","files","force","text","get","split","filter","site","startsWith","map","replace"],"mappings":"AAAA,MAAMA,MAAEA,OAAUC,QAAQ,0BACpBC,QAAEA,SAAYD,QAAQ,uBACtBE,QAAUF,QAAQ,mBAClBG,QAAUH,QAAQ,YAClBI,OAAS,IAAID,QAClB,CAAEE,WAAY,GAAIC,iBAAkB,GAAIC,KAAM,GAAIC,OAAQ,IAAKC,MAAO,MACtE,CAAEF,KAAM,CAAC,gBAAiBG,UAAU,IAE/BC,IAAMX,QAAQ,OAEpBY,OAAOC,QAAU,cAAgCZ,QAChDa,YAAYC,GACXC,MAAMD,EAAQ,CACbE,KAAM,aACNC,QAAS,CAAC,MACVC,WAAY,aACZC,MAAO,SACPC,YAAa,yBACbC,WAAY,CACXC,OAAQ,EACRC,SAAU,IAEXjB,KAAM,CACL,CACCkB,IAAK,OACLC,OAAQ,mCACRC,KAAM,SACNC,SAAWC,GAAM9B,MAAM8B,OAK1BC,KAAKC,SAAW,KAGjBjB,UAAUkB,GAAKC,KAAEA,IAChB,IACMH,KAAKC,gBAAgBD,KAAKI,gBAE/B,MAAMC,EAASxB,IAAIyB,MAAMH,GAEzB,GAAIH,KAAKC,SAASM,MAAMC,GAAYH,EAAOI,OAASD,MAAaN,EAAIQ,QAAQC,KAC5E,OAAOT,EAAIU,MAAM,0DAElB,MAAMC,QAAmBvC,OAAOwC,WAAWX,GAE3C,OAAOD,EAAIa,IAAI,CAAEC,MAAO,CAAC,CAAEH,WAAAA,EAAY1B,KAAM,qBAC5C,MACD,OAAOe,EAAIU,MAAM,4CAInB5B,oBAAoBiC,GAAQ,GAC3B,IAAKA,GAASjB,KAAKC,SAAU,OAAOD,KAAKC,SAEzC,MAAMiB,KAAEA,SAAe9C,QAAQ+C,IAAI,iEAOnC,OALAnB,KAAKC,SAAWiB,EACdE,MAAM,MACNC,QAAQC,GAASA,IAASA,EAAKC,WAAW,OAC1CC,KAAKF,GAASA,EAAKG,QAAQ,aAAc,MAEpCzB,KAAKC","file":"screenshot.js","sourcesContent":["const { isUrl } = require('../../Structures/Util');\nconst { Command } = require('discord.js-commando');\nconst request = require('node-superfetch');\nconst WebShot = require('websshot');\nconst window = new WebShot(\n\t{ removeTags: [], removeAttributes: [], args: [], height: 800, width: 1280 },\n\t{ args: ['--no-sandbox'], headless: true },\n);\nconst url = require('url');\n\nmodule.exports = class ScreenshotCommand extends Command {\n\tconstructor(client) {\n\t\tsuper(client, {\n\t\t\tname: 'screenshot',\n\t\t\taliases: ['ss'],\n\t\t\tmemberName: 'screenshot',\n\t\t\tgroup: 'search',\n\t\t\tdescription: 'Screenshots a website.',\n\t\t\tthrottling: {\n\t\t\t\tusages: 2,\n\t\t\t\tduration: 60,\n\t\t\t},\n\t\t\targs: [\n\t\t\t\t{\n\t\t\t\t\tkey: 'link',\n\t\t\t\t\tprompt: 'What is the link of the website?',\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tvalidate: (m) => isUrl(m),\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\n\t\tthis.nsfwList = null;\n\t}\n\n\tasync run(msg, { link }) {\n\t\ttry {\n\t\t\tif (!this.nsfwList) await this.fetchNSFWList();\n\n\t\t\tconst parsed = url.parse(link);\n\n\t\t\tif (this.nsfwList.some((nsfwURL) => parsed.host === nsfwURL) && !msg.channel.nsfw)\n\t\t\t\treturn msg.reply('This site is NSFW. Please try again in a NSFW channel.');\n\n\t\t\tconst attachment = await window.screenshot(link);\n\n\t\t\treturn msg.say({ files: [{ attachment, name: 'screenshot.png' }] });\n\t\t} catch {\n\t\t\treturn msg.reply(\"Couldn't find any results. Invalid URL?\");\n\t\t}\n\t}\n\n\tasync fetchNSFWList(force = false) {\n\t\tif (!force && this.nsfwList) return this.nsfwList;\n\n\t\tconst { text } = await request.get('https://github.com/blocklistproject/Lists/raw/master/porn.txt');\n\n\t\tthis.nsfwList = text\n\t\t\t.split('\\n')\n\t\t\t.filter((site) => site && !site.startsWith('#'))\n\t\t\t.map((site) => site.replace(/^(0.0.0.0)/, ''));\n\n\t\treturn this.nsfwList;\n\t}\n};\n"]}