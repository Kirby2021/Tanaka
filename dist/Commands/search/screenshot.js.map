{"version":3,"sources":["Commands/search/screenshot.js"],"names":["screenshot","require","isUrl","Command","request","url","module","exports","[object Object]","client","super","name","aliases","memberName","group","description","throttling","usages","duration","args","key","prompt","type","validate","m","this","nsfwList","msg","link","channel","startTyping","fetchNSFWList","parsed","parse","some","nsfwURL","host","nsfw","reply","attachment","say","files","stopTyping","force","text","get","split","filter","site","startsWith","map","replace"],"mappings":"AAAA,MAAMA,WAAEA,YAAeC,QAAQ,+BACzBC,MAAEA,OAAUD,QAAQ,0BACpBE,QAAEA,SAAYF,QAAQ,uBACtBG,QAAUH,QAAQ,mBAClBI,IAAMJ,QAAQ,OAEpBK,OAAOC,QAAU,cAAgCJ,QAChDK,YAAYC,GACXC,MAAMD,EAAQ,CACbE,KAAM,aACNC,QAAS,CAAC,MACVC,WAAY,aACZC,MAAO,SACPC,YAAa,yBACbC,WAAY,CACXC,OAAQ,EACRC,SAAU,IAEXC,KAAM,CACL,CACCC,IAAK,OACLC,OAAQ,mCACRC,KAAM,SACNC,SAAWC,GAAMtB,MAAMsB,OAK1BC,KAAKC,SAAW,KAGjBlB,UAAUmB,GAAKC,KAAEA,IAChB,IACCD,EAAIE,QAAQC,cAEPL,KAAKC,gBAAgBD,KAAKM,gBAE/B,MAAMC,EAAS3B,IAAI4B,MAAML,GAEzB,GAAIH,KAAKC,SAASQ,MAAMC,GAAYH,EAAOI,OAASD,MAAaR,EAAIE,QAAQQ,KAC5E,OAAOV,EAAIW,MAAM,0DAElB,MAAMC,QAAmBvC,WAAW4B,GAIpC,OAFAD,EAAIa,IAAI,CAAEC,MAAO,CAAC,CAAEF,WAAAA,EAAY5B,KAAM,qBAE/BgB,EAAIE,QAAQa,aAClB,MAGD,OAFAf,EAAIW,MAAM,2CAEHX,EAAIE,QAAQa,cAIrBlC,oBAAoBmC,GAAQ,GAC3B,IAAKA,GAASlB,KAAKC,SAAU,OAAOD,KAAKC,SAEzC,MAAMkB,KAAEA,SAAexC,QAAQyC,IAAI,oEAOnC,OALApB,KAAKC,SAAWkB,EACdE,MAAM,MACNC,QAAQC,GAASA,IAASA,EAAKC,WAAW,OAC1CC,KAAKF,GAASA,EAAKG,QAAQ,aAAc,MAEpC1B,KAAKC","file":"screenshot.js","sourcesContent":["const { screenshot } = require('../../Structures/Puppeteer');\nconst { isUrl } = require('../../Structures/Util');\nconst { Command } = require('discord.js-commando');\nconst request = require('node-superfetch');\nconst url = require('url');\n\nmodule.exports = class ScreenshotCommand extends Command {\n\tconstructor(client) {\n\t\tsuper(client, {\n\t\t\tname: 'screenshot',\n\t\t\taliases: ['ss'],\n\t\t\tmemberName: 'screenshot',\n\t\t\tgroup: 'search',\n\t\t\tdescription: 'Screenshots a website.',\n\t\t\tthrottling: {\n\t\t\t\tusages: 2,\n\t\t\t\tduration: 60,\n\t\t\t},\n\t\t\targs: [\n\t\t\t\t{\n\t\t\t\t\tkey: 'link',\n\t\t\t\t\tprompt: 'What is the link of the website?',\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tvalidate: (m) => isUrl(m),\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\n\t\tthis.nsfwList = null;\n\t}\n\n\tasync run(msg, { link }) {\n\t\ttry {\n\t\t\tmsg.channel.startTyping();\n\n\t\t\tif (!this.nsfwList) await this.fetchNSFWList();\n\n\t\t\tconst parsed = url.parse(link);\n\n\t\t\tif (this.nsfwList.some((nsfwURL) => parsed.host === nsfwURL) && !msg.channel.nsfw)\n\t\t\t\treturn msg.reply('This site is NSFW. Please try again in a NSFW channel.');\n\n\t\t\tconst attachment = await screenshot(link);\n\n\t\t\tmsg.say({ files: [{ attachment, name: 'screenshot.png' }] });\n\n\t\t\treturn msg.channel.stopTyping();\n\t\t} catch {\n\t\t\tmsg.reply(\"Couldn't find any results. Invalid URL?\");\n\n\t\t\treturn msg.channel.stopTyping();\n\t\t}\n\t}\n\n\tasync fetchNSFWList(force = false) {\n\t\tif (!force && this.nsfwList) return this.nsfwList;\n\n\t\tconst { text } = await request.get('https://blocklistproject.github.io/Lists/alt-version/porn-nl.txt');\n\n\t\tthis.nsfwList = text\n\t\t\t.split('\\n')\n\t\t\t.filter((site) => site && !site.startsWith('#'))\n\t\t\t.map((site) => site.replace(/^(0.0.0.0)/, ''));\n\n\t\treturn this.nsfwList;\n\t}\n};\n"]}