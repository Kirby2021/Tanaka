{"version":3,"sources":["Commands/search/ocr.js"],"names":["Command","require","MessageEmbed","request","FormData","module","exports","[object Object]","client","super","name","aliases","group","memberName","description","clientPermissions","args","key","prompt","type","throttling","usages","duration","msg","image","form","append","body","post","set","apiKey","process","env","OCR_KEY","send","length","say","embed","setImage","setColor","setDescription","setFooter","author","tag","displayAvatarURL","dynamic","setTimestamp","err","reply","message"],"mappings":"AAAA,MAAMA,QAAEA,SAAYC,QAAQ,wBACtBC,aAAEA,cAAiBD,QAAQ,cAC3BE,QAAUF,QAAQ,mBAClBG,SAAWH,QAAQ,aAEzBI,OAAOC,QAAU,cAAyBN,QACzCO,YAAYC,GACXC,MAAMD,EAAQ,CACbE,KAAM,MACNC,QAAS,CAAC,iCACVC,MAAO,SACPC,WAAY,MACZC,YAAa,8BACbC,kBAAmB,CAAC,eACpBC,KAAM,CACL,CACCC,IAAK,QACLC,OAAQ,uCACRC,KAAM,UAGRC,WAAY,CACXC,OAAQ,EACRC,SAAU,MAKbf,UAAUgB,GAAKC,MAAEA,IAChB,IACC,MAAMC,GAAO,IAAIrB,UAAWsB,OAAO,MAAOF,IACpCG,KAAEA,SAAexB,QACrByB,KAAK,qCACLC,IAAI,CAAEC,OAAQC,QAAQC,IAAIC,UAC1BC,KAAKT,GAEP,GAAmD,IAA/CE,EAAoB,cAAc,WAAEQ,OAAc,OAAOZ,EAAIa,IAAI,2BAErE,MAAMC,GAAQ,IAAInC,cAChBoC,SAASd,GACTe,SAAS,UACTC,eAAeb,EAAoB,cAAc,YACjDc,UACA,gBAAgBlB,EAAImB,OAAOC,MAC3BpB,EAAImB,OAAOE,iBAAiB,CAAEC,SAAS,KAEvCC,eAEF,OAAOvB,EAAIc,MAAMA,GAChB,MAAOU,GACR,OAAOxB,EAAIyB,MAAM,uBAAuBD,EAAIE","file":"ocr.js","sourcesContent":["const { Command } = require('discord.js-commando');\nconst { MessageEmbed } = require('discord.js');\nconst request = require('node-superfetch');\nconst FormData = require('form-data');\n\nmodule.exports = class OCRCommand extends Command {\n\tconstructor(client) {\n\t\tsuper(client, {\n\t\t\tname: 'ocr',\n\t\t\taliases: ['optical-character-recognition'],\n\t\t\tgroup: 'search',\n\t\t\tmemberName: 'ocr',\n\t\t\tdescription: 'Lists the text in an image.',\n\t\t\tclientPermissions: ['EMBED_LINKS'],\n\t\t\targs: [\n\t\t\t\t{\n\t\t\t\t\tkey: 'image',\n\t\t\t\t\tprompt: 'What image would you like to search?',\n\t\t\t\t\ttype: 'image',\n\t\t\t\t},\n\t\t\t],\n\t\t\tthrottling: {\n\t\t\t\tusages: 2,\n\t\t\t\tduration: 60,\n\t\t\t},\n\t\t});\n\t}\n\n\tasync run(msg, { image }) {\n\t\ttry {\n\t\t\tconst form = new FormData().append('url', image);\n\t\t\tconst { body } = await request\n\t\t\t\t.post('https://api.ocr.space/parse/image')\n\t\t\t\t.set({ apiKey: process.env.OCR_KEY })\n\t\t\t\t.send(form);\n\n\t\t\tif (body['ParsedResults']['ParsedText'].length === 0) return msg.say(\"Couldn't find any text.\");\n\n\t\t\tconst embed = new MessageEmbed()\n\t\t\t\t.setImage(image)\n\t\t\t\t.setColor('RANDOM')\n\t\t\t\t.setDescription(body['ParsedResults']['ParsedText'])\n\t\t\t\t.setFooter(\n\t\t\t\t\t`Requested by ${msg.author.tag}`,\n\t\t\t\t\tmsg.author.displayAvatarURL({ dynamic: true }),\n\t\t\t\t)\n\t\t\t\t.setTimestamp();\n\n\t\t\treturn msg.embed(embed);\n\t\t} catch (err) {\n\t\t\treturn msg.reply(`An error occured: \\`${err.message}\\`.`);\n\t\t}\n\t}\n};\n"]}