const{Command:Command}=require("discord.js-commando");module.exports=class extends Command{constructor(a){super(a,{name:"unload",aliases:["unload-command","unload-cmd"],group:"util",memberName:"unload",description:"Unloads a command.",ownerOnly:!0,guarded:!0,args:[{key:"command",prompt:"Which command would you like to unload?",type:"command"}]})}async run(a,{command:n}){if(n.unload(),this.client.shard)try{await this.client.shard.broadcastEval(`\n\t\t\t\t\tconst ids = [${this.client.shard.shards.join(",")}];\n\n\t\t\t\t\tif (!this.shard.shards.some(id => ids.includes(id))) this.registry.commands.get('${n.name}').unload();\n\t\t\t\t`)}catch(t){return this.client.emit("warn","Error wehn broadcasting command unload to other shards."),this.client.emit("error",t),await a.reply(`Unloaded \`${n.ame}\` command, but failed to unload on other shards.`),null}return await a.reply(`Unloaded \`${n.name}\` command${this.client.shard?" on all shards":""}.`),null}};
//# sourceMappingURL=unload.js.map
