{"version":3,"sources":["Commands/util/exec.js"],"names":["Command","require","stripIndents","execSync","module","exports","ExecCommand","[object Object]","client","super","name","aliases","group","memberName","description","details","ownerOnly","guarded","args","key","prompt","type","msg","command","results","this","exec","reply","err","std","length","substring","timeout","encoding","trim","stderr"],"mappings":"AAAA,MAAMA,QAAEA,SAAYC,QAAQ,wBACtBC,aAAEA,cAAiBD,QAAQ,gBAC3BE,SAAEA,UAAaF,QAAQ,iBAE7BG,OAAOC,QAAU,MAAMC,oBAAoBN,QAC1CO,YAAYC,GACXC,MAAMD,EAAQ,CACbE,KAAM,OACNC,QAAS,CAAC,UAAW,KAAM,KAC3BC,MAAO,OACPC,WAAY,OACZC,YAAa,uCACbC,QAAS,2CACTC,WAAW,EACXC,SAAS,EACTC,KAAM,CACL,CACCC,IAAK,UACLC,OAAQ,uCACRC,KAAM,aAMVd,IAAIe,GAAKC,QAAEA,IACV,MAAMC,EAAUC,KAAKC,KAAKH,GAE1B,OAAOD,EAAIK,MAAMzB,YAAY;MACzBsB,EAAQI,IAAM,oBAAsB;;KAErCJ,EAAQK,IAAIC,OAAS,IAAO,GAAGN,EAAQK,IAAIE,UAAU,EAAG,WAAaP,EAAQK;;KAKjFtB,KAAKgB,GACJ,IAGC,MAAO,CAAEK,KAAK,EAAOC,IAFN1B,SAASoB,EAAS,CAAES,QAAS,KAAQC,SAAU,UAE7BC,QAChC,MAAON,GACR,MAAO,CAAEA,KAAK,EAAMC,IAAKD,EAAIO,OAAOD","file":"exec.js","sourcesContent":["const { Command } = require('discord.js-commando');\nconst { stripIndents } = require('common-tags');\nconst { execSync } = require('child_process');\n\nmodule.exports = class ExecCommand extends Command {\n\tconstructor(client) {\n\t\tsuper(client, {\n\t\t\tname: 'exec',\n\t\t\taliases: ['execute', 'sh', '$'],\n\t\t\tgroup: 'util',\n\t\t\tmemberName: 'exec',\n\t\t\tdescription: 'Executes a command line application.',\n\t\t\tdetails: 'Only the bot owner may use this command.',\n\t\t\townerOnly: true,\n\t\t\tguarded: true,\n\t\t\targs: [\n\t\t\t\t{\n\t\t\t\t\tkey: 'command',\n\t\t\t\t\tprompt: 'What command do you want to execute?',\n\t\t\t\t\ttype: 'string',\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\trun(msg, { command }) {\n\t\tconst results = this.exec(command);\n\n\t\treturn msg.reply(stripIndents`\n\t\t\t_${results.err ? 'An error occured.' : 'Successfully executed.'}_\n\t\t\t\\`\\`\\`sh\n\t\t\t${results.std.length > 2000 ? `${results.std.substring(0, 1900)}...` : results.std}\n\t\t\t\\`\\`\\`\n\t\t`);\n\t}\n\n\texec(command) {\n\t\ttry {\n\t\t\tconst stdout = execSync(command, { timeout: 150000, encoding: 'utf-8' });\n\n\t\t\treturn { err: false, std: stdout.trim() };\n\t\t} catch (err) {\n\t\t\treturn { err: true, std: err.stderr.trim() };\n\t\t}\n\t}\n};\n"]}