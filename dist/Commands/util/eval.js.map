{"version":3,"sources":["Commands/util/eval.js"],"names":["util","require","discord","tags","escapeRegex","replaceIp","Command","nl","nlPattern","RegExp","module","exports","EvalCommand","[object Object]","client","super","name","aliases","group","memberName","description","details","ownerOnly","guarded","args","key","prompt","type","this","lastResult","Object","defineProperty","value","configurable","msg","script","channel","guild","author","member","message","doReply","async","val","Error","reply","result","makeResultMessages","process","hrtime","hrStart","Array","isArray","item","hrDiff","eval","err","map","input","inspected","inspect","depth","replace","sensitivePattern","env","DATABASE_URL","split","last","length","prepend","append","splitMessage","stripIndents","maxLength","_sensitivePattern","pattern","token"],"mappings":"AACA,MAAMA,KAAOC,QAAQ,QACfC,QAAUD,QAAQ,cAClBE,KAAOF,QAAQ,gBACfG,YAAEA,YAAWC,UAAEA,WAAcJ,QAAQ,0BACrCK,QAAEA,SAAYL,QAAQ,uBAEtBM,GAAK,SACLC,UAAY,IAAIC,OAAOF,GAAI,KAEjCG,OAAOC,QAAU,MAAMC,oBAAoBN,QAC1CO,YAAYC,GACXC,MAAMD,EAAQ,CACbE,KAAM,OACNC,QAAS,CAAC,SACVC,MAAO,OACPC,WAAY,OACZC,YAAa,sCACbC,QAAS,2CACTC,WAAW,EACXC,SAAS,EACTC,KAAM,CACL,CACCC,IAAK,SACLC,OAAQ,wCACRC,KAAM,aAKTC,KAAKC,WAAa,KAElBC,OAAOC,eAAeH,KAAM,oBAAqB,CAAEI,MAAO,KAAMC,cAAc,IAG/EpB,IAAIqB,KAAKC,OAAEA,SACV,MAAMC,QAAEA,QAAOC,MAAEA,MAAKC,OAAEA,OAAMC,OAAEA,QAAWL,IACrCM,QAAUN,KACVpB,OAAEA,OAAMe,WAAEA,YAAeD,KAEzBa,QAAUC,MAAOC,IACtB,GAAIA,aAAeC,MAClBV,IAAIW,MAAM,qBAAqBF,WACzB,CACN,MAAMG,QAAelB,KAAKmB,mBAAmBJ,EAAKK,QAAQC,OAAOrB,KAAKsB,UAEtE,GAAIC,MAAMC,QAAQN,GACjB,IAAK,MAAMO,KAAQP,EAAQZ,IAAIW,MAAMQ,QAErCnB,IAAIW,MAAMC,KAKb,IAAIQ,OAEJ,IACC,MAAMJ,QAAUF,QAAQC,SACxBrB,KAAKC,WAAa0B,KAAKpB,QAEvBmB,OAASN,QAAQC,OAAOC,SACvB,MAAOM,GACR,OAAOtB,IAAIW,MAAM,6BAA6BW,OAG/C5B,KAAKsB,QAAUF,QAAQC,SACvB,MAAMH,OAASlB,KAAKmB,mBAAmBnB,KAAKC,WAAYyB,OAAQnB,QAEhE,OAAIgB,MAAMC,QAAQN,QACVA,OAAOW,KAAKJ,GAASnB,IAAIW,MAAMxC,UAAUgD,MAE1CnB,IAAIW,MAAMxC,UAAUyC,SAG5BjC,mBAAmBiC,EAAQQ,EAAQI,EAAQ,MAC1C,MAAMC,EAAY3D,KAChB4D,QAAQd,EAAQ,CAAEe,MAAO,IACzBC,QAAQtD,UAAW,MACnBsD,QAAQlC,KAAKmC,iBAAkB,gBAC/BD,QAAQd,QAAQgB,IAAIC,aAAc,gBAClCH,QAAQd,QAAQgB,IAAK,gBAEjBE,EAAQP,EAAUO,MAAM,MACxBC,EAAOR,EAAUS,OAAS,EAO1BC,EAAU,qBALE,MAAjBV,EAAU,IAA+B,MAAjBA,EAAU,IAA+B,MAAjBA,EAAU,GAAaO,EAAM,GAAKP,EAAU,OAMvFW,EAAS,KAJM,MAApBX,EAAUQ,IAAqC,MAApBR,EAAUQ,IAAqC,MAApBR,EAAUQ,GAC7DD,EAAMA,EAAME,OAAS,GACrBT,EAAUQ,aAId,GAAIT,EACH,OAAOxD,QAAQqE,aACdpE,KAAKqE,YAAY;+BACUlB,EAAO,GAAK,EAAI,GAAGA,EAAO,OAAS,KAAKA,EAAO,GAAK;;MAE7EK;;KAGF,CAAEc,UAAW,KAAMJ,QAAAA,EAASC,OAAAA,IAK/BP,uBACC,IAAKnC,KAAK8C,kBAAmB,CAC5B,MAAM5D,OAAEA,GAAWc,KACnB,IAAI+C,EAAU,GAEV7D,EAAO8D,QAAOD,GAAWvE,YAAYU,EAAO8D,QAEhD9C,OAAOC,eAAeH,KAAM,oBAAqB,CAChDI,MAAO,IAAIvB,OAAOkE,EAAS,MAC3B1C,cAAc,IAIhB,OAAOL,KAAK8C","file":"eval.js","sourcesContent":["/* eslint-disable no-unused-vars */\nconst util = require('util');\nconst discord = require('discord.js');\nconst tags = require('common-tags');\nconst { escapeRegex, replaceIp } = require('../../Structures/Util');\nconst { Command } = require('discord.js-commando');\n\nconst nl = '!!NL!!';\nconst nlPattern = new RegExp(nl, 'g');\n\nmodule.exports = class EvalCommand extends Command {\n\tconstructor(client) {\n\t\tsuper(client, {\n\t\t\tname: 'eval',\n\t\t\taliases: ['debug'],\n\t\t\tgroup: 'util',\n\t\t\tmemberName: 'eval',\n\t\t\tdescription: 'Executes arbitrary JavaScript code.',\n\t\t\tdetails: 'Only the bot owner may use this command.',\n\t\t\townerOnly: true,\n\t\t\tguarded: true,\n\t\t\targs: [\n\t\t\t\t{\n\t\t\t\t\tkey: 'script',\n\t\t\t\t\tprompt: 'What code would you like to evaluate?',\n\t\t\t\t\ttype: 'string',\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\n\t\tthis.lastResult = null;\n\n\t\tObject.defineProperty(this, '_sensitivePattern', { value: null, configurable: true });\n\t}\n\n\trun(msg, { script }) {\n\t\tconst { channel, guild, author, member } = msg;\n\t\tconst message = msg;\n\t\tconst { client, lastResult } = this;\n\n\t\tconst doReply = async (val) => {\n\t\t\tif (val instanceof Error) {\n\t\t\t\tmsg.reply(`Callback error: \\`${val}\\``);\n\t\t\t} else {\n\t\t\t\tconst result = await this.makeResultMessages(val, process.hrtime(this.hrStart));\n\n\t\t\t\tif (Array.isArray(result)) {\n\t\t\t\t\tfor (const item of result) msg.reply(item);\n\t\t\t\t} else {\n\t\t\t\t\tmsg.reply(result);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tlet hrDiff;\n\n\t\ttry {\n\t\t\tconst hrStart = process.hrtime();\n\t\t\tthis.lastResult = eval(script); // eslint-disable-line no-eval\n\n\t\t\thrDiff = process.hrtime(hrStart);\n\t\t} catch (err) {\n\t\t\treturn msg.reply(`Error while evaluating: \\`${err}\\``);\n\t\t}\n\n\t\tthis.hrStart = process.hrtime();\n\t\tconst result = this.makeResultMessages(this.lastResult, hrDiff, script);\n\n\t\tif (Array.isArray(result)) {\n\t\t\treturn result.map((item) => msg.reply(replaceIp(item)));\n\t\t}\n\t\treturn msg.reply(replaceIp(result));\n\t}\n\n\tmakeResultMessages(result, hrDiff, input = null) {\n\t\tconst inspected = util\n\t\t\t.inspect(result, { depth: 0 })\n\t\t\t.replace(nlPattern, '\\n')\n\t\t\t.replace(this.sensitivePattern, '--REDACTED--')\n\t\t\t.replace(process.env.DATABASE_URL, '--REDACTED--')\n\t\t\t.replace(process.env, '--REDACTED--');\n\n\t\tconst split = inspected.split('\\n');\n\t\tconst last = inspected.length - 1;\n\t\tconst prependPart =\n\t\t\tinspected[0] !== '{' && inspected[0] !== '[' && inspected[0] !== \"'\" ? split[0] : inspected[0];\n\t\tconst appendPart =\n\t\t\tinspected[last] !== '}' && inspected[last] !== ']' && inspected[last] !== \"'\"\n\t\t\t\t? split[split.length - 1]\n\t\t\t\t: inspected[last];\n\t\tconst prepend = `\\`\\`\\`javascript\\n${prependPart}\\n`;\n\t\tconst append = `\\n${appendPart}\\n\\`\\`\\``;\n\n\t\tif (input) {\n\t\t\treturn discord.splitMessage(\n\t\t\t\ttags.stripIndents`\n\t\t\t\t*Callback executed after ${hrDiff[0] > 0 ? `${hrDiff[0]}s ` : ''}${hrDiff[1] / 1000000}ms.*\n\t\t\t\t\\`\\`\\`javascript\n\t\t\t\t${inspected}\n\t\t\t\t\\`\\`\\`\n\t\t\t`,\n\t\t\t\t{ maxLength: 1900, prepend, append },\n\t\t\t);\n\t\t}\n\t}\n\n\tget sensitivePattern() {\n\t\tif (!this._sensitivePattern) {\n\t\t\tconst { client } = this;\n\t\t\tlet pattern = '';\n\n\t\t\tif (client.token) pattern += escapeRegex(client.token);\n\n\t\t\tObject.defineProperty(this, '_sensitivePattern', {\n\t\t\t\tvalue: new RegExp(pattern, 'gi'),\n\t\t\t\tconfigurable: false,\n\t\t\t});\n\t\t}\n\n\t\treturn this._sensitivePattern;\n\t}\n};\n"]}