const{Command:Command}=require("discord.js-commando"),{MessageEmbed:MessageEmbed}=require("discord.js"),{permissions:permissions}=require("../../Structures/Util");module.exports=class extends Command{constructor(e){super(e,{name:"help",aliases:["cmd","commands"],group:"info",memberName:"help",description:"Displays a list of available commands, or detailed information for a specific command.",guarded:!0,clientPermissions:["EMBED_LINKS"],args:[{key:"command",prompt:"Which command would you like to view the information for?",type:"command",default:""}]})}async run(e,{command:s}){if(!s){const s=[];for(let e=0;e<Math.ceil(this.client.registry.groups.size/10);e++){const i=(new MessageEmbed).setTitle(`Command List (${e+1})`).setColor("RANDOM");s.push(i)}let i=0,o=0,n=0;for(const r of this.client.registry.groups.values()){o++;const a=this.client.isOwner(e.author),t=r.commands.filter((s=>!!a||!s.ownerOnly&&!s.hidden&&!(s.nsfw&&!e.channel.nsfw)));t.size&&(i+=t.size,o>10*n+10&&n++,s[n].addField(`${r.name}`,t.map((e=>`\`${e.name}\``)).join(" ")))}const r=i===this.client.registry.groups.size;s[s.length-1].setFooter(`${this.client.registry.commands.size} Commands ${r?"":` (${i} Shown)`}`);try{const i=[];for(const o of s)i.push(await e.direct({embed:o}));return"dm"!==e.channel.type&&i.push(await e.say("Check your DMs!")),i}catch{return e.reply("You have your DMs disabled!")}}const i=s.userPermissions?s.userPermissions.map((e=>permissions[e])).join(", "):"None",o=s.clientPermissions?s.clientPermissions.map((e=>permissions[e])).join(", "):"None",n=(new MessageEmbed).setTitle(`__Command **${s.name}**__${s.guildOnly?" (Usable only in servers)":""}`).setDescription(`${s.description}${s.details?`\n${s.details}`:""}`).addField("**Format:**",`${s.usage(s.format||"")}`).addField("**Aliases:**",`${s.aliases.join(", ")||"None"}`).addField("**Group:**",`${s.group.name} (\`${s.groupID}:${s.memberName}\`)`).addField("**NSFW:**",""+(s.nsfw?"Yes":"No")).addField("**User Permissions:**",i).addField("**Bot Permissions:**",o).setColor("RANDOM").setFooter(`Requested by ${e.author.tag}`,e.author.displayAvatarURL({dynamic:!0,size:4096})).setTimestamp();return e.say(n)}};
//# sourceMappingURL=help.js.map
