{"version":3,"sources":["Commands/info/serverinfo.js"],"names":["filterLevels","verificationLevels","regions","require","Command","MessageEmbed","moment","module","exports","[object Object]","client","super","name","aliases","group","memberName","description","clientPermissions","guildOnly","msg","roles","guild","cache","sort","a","b","position","map","role","toString","members","channels","emojis","owner","fetchOwner","embed","setTitle","setColor","setThumbnail","iconURL","dynamic","size","addField","id","user","tag","ownerID","region","premiumTier","explicitContentFilter","verificationLevel","createdTimestamp","format","fromNow","length","memberCount","filter","member","bot","channel","type","premiumSubscriptionCount","setTimestamp","say"],"mappings":"AAAA,MAAMA,aAAEA,aAAYC,mBAAEA,mBAAkBC,QAAEA,SAAYC,QAAQ,0BACxDC,QAAEA,SAAYD,QAAQ,wBACtBE,aAAEA,cAAiBF,QAAQ,cAC3BG,OAASH,QAAQ,UAEvBI,OAAOC,QAAU,cAAgCJ,QAChDK,YAAYC,GACXC,MAAMD,EAAQ,CACbE,KAAM,aACNC,QAAS,CAAC,SAAU,cAAe,SACnCC,MAAO,OACPC,WAAY,aACZC,YAAa,kDACbC,kBAAmB,CAAC,eACpBC,WAAW,IAIbT,UAAUU,GACT,MAAMC,EAAQD,EAAIE,MAAMD,MAAME,MAC5BC,MAAK,CAACC,EAAGC,IAAMA,EAAEC,SAAWF,EAAEE,WAC9BC,KAAKC,GAASA,EAAKC,aACfC,EAAUX,EAAIE,MAAMS,QAAQR,MAC5BS,EAAWZ,EAAIE,MAAMU,SAAST,MAC9BU,EAASb,EAAIE,MAAMW,OAAOV,MAC1BW,QAAcd,EAAIE,MAAMa,aAExBC,GAAQ,IAAI9B,cAChB+B,SAAS,6BAA6BjB,EAAIE,MAAMT,YAChDyB,SAAS,UACTC,aAAanB,EAAIE,MAAMkB,QAAQ,CAAEC,SAAS,EAAMC,KAAM,QACtDC,SAAS,UAAW,CACpB,eAAevB,EAAIE,MAAMT,OACzB,aAAaO,EAAIE,MAAMsB,KACvB,gBAAgBV,EAAMW,KAAKC,UAAU1B,EAAIE,MAAMyB,aAC/C,iBAAiB5C,QAAQiB,EAAIE,MAAM0B,UACnC,sBAAqB5B,EAAIE,MAAM2B,YAAc,QAAQ7B,EAAIE,MAAM2B,cAAgB,QAC/E,0BAA0BhD,aAAamB,EAAIE,MAAM4B,yBACjD,6BAA6BhD,mBAAmBkB,EAAIE,MAAM6B,qBAC1D,yBAAyB5C,OAAOa,EAAIE,MAAM8B,kBAAkBC,OAAO,SAAS9C,OAC3Ea,EAAIE,MAAM8B,kBACTC,OAAO,SAAS9C,OAAOa,EAAIE,MAAM8B,kBAAkBE,cACrD,MAEAX,SAAS,aAAc,CACvB,qBAAqBtB,EAAMkC,SAC3B,sBAAsBtB,EAAOS,OAC7B,uBAAuBtB,EAAIE,MAAMkC,cACjC,iBAAiBzB,EAAQ0B,QAAQC,IAAYA,EAAOb,KAAKc,MAAKjB,OAC9D,eAAeX,EAAQ0B,QAAQC,GAAWA,EAAOb,KAAKc,MAAKjB,OAC3D,wBAAwBV,EAASyB,QAAQG,GAA6B,SAAjBA,EAAQC,OAAiBnB,OAC9E,yBAAyBV,EAASyB,QAAQG,GAA6B,UAAjBA,EAAQC,OAAkBnB,OAChF,4BACCV,EAASyB,QAAQG,GAA6B,aAAjBA,EAAQC,OAAqBnB,OAE3D,wBAAwBV,EAASyB,QAAQG,GAA6B,SAAjBA,EAAQC,OAAiBnB,OAC9E,yBAAyBV,EAASyB,QAAQG,GAA6B,UAAjBA,EAAQC,OAAkBnB,OAChF,sBAAsBtB,EAAIE,MAAMwC,0BAA4B,MAC5D,MAEAC,eAEF,OAAO3C,EAAI4C,IAAI5B","file":"serverinfo.js","sourcesContent":["const { filterLevels, verificationLevels, regions } = require('../../Structures/Util');\nconst { Command } = require('discord.js-commando');\nconst { MessageEmbed } = require('discord.js');\nconst moment = require('moment');\n\nmodule.exports = class ServerInfoCommand extends Command {\n\tconstructor(client) {\n\t\tsuper(client, {\n\t\t\tname: 'serverinfo',\n\t\t\taliases: ['server', 'server-info', 'guild'],\n\t\t\tgroup: 'info',\n\t\t\tmemberName: 'serverinfo',\n\t\t\tdescription: \"Responds with the server's general information.\",\n\t\t\tclientPermissions: ['EMBED_LINKS'],\n\t\t\tguildOnly: true,\n\t\t});\n\t}\n\n\tasync run(msg) {\n\t\tconst roles = msg.guild.roles.cache\n\t\t\t.sort((a, b) => b.position - a.position)\n\t\t\t.map((role) => role.toString());\n\t\tconst members = msg.guild.members.cache;\n\t\tconst channels = msg.guild.channels.cache;\n\t\tconst emojis = msg.guild.emojis.cache;\n\t\tconst owner = await msg.guild.fetchOwner();\n\n\t\tconst embed = new MessageEmbed()\n\t\t\t.setTitle(`**Guild Information for __${msg.guild.name}__**`)\n\t\t\t.setColor('RANDOM')\n\t\t\t.setThumbnail(msg.guild.iconURL({ dynamic: true, size: 4096 }))\n\t\t\t.addField('General', [\n\t\t\t\t`**❯ Name:** ${msg.guild.name}`,\n\t\t\t\t`**❯ ID:** ${msg.guild.id}`,\n\t\t\t\t`**❯ Owner:** ${owner.user.tag} \\`(${msg.guild.ownerID})\\``,\n\t\t\t\t`**❯ Region:** ${regions[msg.guild.region]}`,\n\t\t\t\t`**❯ Boost Tier:** ${msg.guild.premiumTier ? `Tier ${msg.guild.premiumTier}` : 'None'}`,\n\t\t\t\t`**❯ Explicit Filter:** ${filterLevels[msg.guild.explicitContentFilter]}`,\n\t\t\t\t`**❯ Verification Level:** ${verificationLevels[msg.guild.verificationLevel]}`,\n\t\t\t\t`**❯ Time Created:** \\`${moment(msg.guild.createdTimestamp).format('LT')} ${moment(\n\t\t\t\t\tmsg.guild.createdTimestamp,\n\t\t\t\t).format('LL')} ${moment(msg.guild.createdTimestamp).fromNow()}\\``,\n\t\t\t\t'\\u200b',\n\t\t\t])\n\t\t\t.addField('Statistics', [\n\t\t\t\t`**❯ Role Count:** ${roles.length}`,\n\t\t\t\t`**❯ Emoji Count:** ${emojis.size}`,\n\t\t\t\t`**❯ Member Count:** ${msg.guild.memberCount}`,\n\t\t\t\t`**❯ Humans:** ${members.filter((member) => !member.user.bot).size}`,\n\t\t\t\t`**❯ Bots:** ${members.filter((member) => member.user.bot).size}`,\n\t\t\t\t`**❯ Text Channels:** ${channels.filter((channel) => channel.type === 'text').size}`,\n\t\t\t\t`**❯ Voice Channels:** ${channels.filter((channel) => channel.type === 'voice').size}`,\n\t\t\t\t`**❯ Category Channels:** ${\n\t\t\t\t\tchannels.filter((channel) => channel.type === 'category').size\n\t\t\t\t}`,\n\t\t\t\t`**❯ News Channels:** ${channels.filter((channel) => channel.type === 'news').size}`,\n\t\t\t\t`**❯ Stage Channels:** ${channels.filter((channel) => channel.type === 'stage').size}`,\n\t\t\t\t`**❯ Boost Count:** ${msg.guild.premiumSubscriptionCount ?? '0'}`,\n\t\t\t\t'\\u200b',\n\t\t\t])\n\t\t\t.setTimestamp();\n\n\t\treturn msg.say(embed);\n\t}\n};\n"]}