{"version":3,"sources":["Commands/info/info.js"],"names":["MessageEmbed","version","djsVersion","require","formatBytes","Command","execSync","utc","os","ms","module","exports","InfoCommand","[object Object]","client","super","name","aliases","group","memberName","description","clientPermissions","guarded","msg","core","cpus","embed","setTitle","setThumbnail","this","user","displayAvatarURL","size","setColor","addField","tag","id","registry","commands","guilds","cache","toLocaleString","reduce","a","b","memberCount","channels","createdTimestamp","format","process","getCommitHash","env","SUPPORT_SERVER","join","uptime","long","platform","arch","length","model","speed","memoryUsage","heapTotal","heapUsed","setTimestamp","say","timeout","encoding","trim"],"mappings":"AAAA,MAAMA,aAAEA,aAAcC,QAASC,YAAeC,QAAQ,eAChDC,YAAEA,aAAgBD,QAAQ,0BAC1BF,QAAEA,SAAYE,QAAQ,0BACtBE,QAAEA,SAAYF,QAAQ,wBACtBG,SAAEA,UAAaH,QAAQ,kBACvBI,IAAEA,KAAQJ,QAAQ,UAClBK,GAAKL,QAAQ,MACbM,GAAKN,QAAQ,MAEnBO,OAAOC,QAAU,MAAMC,oBAAoBP,QAC1CQ,YAAYC,GACXC,MAAMD,EAAQ,CACbE,KAAM,OACNC,QAAS,CAAC,WAAY,WACtBC,MAAO,OACPC,WAAY,OACZC,YAAa,oDACbC,kBAAmB,CAAC,eACpBC,SAAS,IAIXT,IAAIU,GACH,MAAMC,EAAOhB,GAAGiB,OAAO,GACjBC,GAAQ,IAAI1B,cAChB2B,SAAS,mBACTC,aAAaC,KAAKf,OAAOgB,KAAKC,iBAAiB,CAAEC,KAAM,QACvDC,SAAS,UACTC,SACA,UACA,CACC,iBAAiBL,KAAKf,OAAOgB,KAAKK,QAAQN,KAAKf,OAAOgB,KAAKM,MAC3D,mBAAmBP,KAAKf,OAAOuB,SAASC,SAASN,OACjD,iBAAiBH,KAAKf,OAAOyB,OAAOC,MAAMR,KAAKS,mBAC/C,gBAAgBZ,KAAKf,OAAOyB,OAAOC,MACjCE,QAAO,CAACC,EAAGC,IAAMD,EAAIC,EAAEC,aAAa,GACpCJ,mBACF,mBAAmBZ,KAAKf,OAAOgC,SAASN,MAAMR,KAAKS,mBACnD,0BAA0BlC,IAAIsB,KAAKf,OAAOgB,KAAKiB,kBAAkBC,OAChE,6BAED,oBAAoBC,QAAQhD,YAC5B,qBAAqBA,YACrB,wBAAwBC,eACxB,wBAAwB2B,KAAKqB,oBAC7B,2DACA,0CACA,0BAA0BD,QAAQE,IAAIC,kBACtC,KACCC,KAAK,OAEPnB,SACA,SACA,CACC,iBAAiBzB,GAAiB,IAAdD,GAAG8C,SAAiB,CAAEC,MAAM,MAChD,mBAAmBN,QAAQO,WAC3B,eAAeP,QAAQQ,OACvB,aACA,YAAiBjD,GAAGiB,OAAOiC,SAC3B,YAAiBlC,EAAKmC,QACtB,YAAiBnC,EAAKoC,WACtB,gBACA,YAAiBxD,YAAY6C,QAAQY,cAAcC,aACnD,WAAgB1D,YAAY6C,QAAQY,cAAcE,aACjDV,KAAK,OAEPW,eAEF,OAAOzC,EAAI0C,IAAIvC,GAGhBb,gBAGC,OAFmBP,SAAS,6BAA8B,CAAE4D,QAAS,KAAOC,SAAU,UAEpEC","file":"info.js","sourcesContent":["const { MessageEmbed, version: djsVersion } = require('discord.js');\nconst { formatBytes } = require('../../Structures/Util');\nconst { version } = require('../../../package.json');\nconst { Command } = require('discord.js-commando');\nconst { execSync } = require('child_process');\nconst { utc } = require('moment');\nconst os = require('os');\nconst ms = require('ms');\n\nmodule.exports = class InfoCommand extends Command {\n\tconstructor(client) {\n\t\tsuper(client, {\n\t\t\tname: 'info',\n\t\t\taliases: ['bot-info', 'botinfo'],\n\t\t\tgroup: 'info',\n\t\t\tmemberName: 'info',\n\t\t\tdescription: 'Responds with the general information of the bot.',\n\t\t\tclientPermissions: ['EMBED_LINKS'],\n\t\t\tguarded: true,\n\t\t});\n\t}\n\n\trun(msg) {\n\t\tconst core = os.cpus()[0];\n\t\tconst embed = new MessageEmbed()\n\t\t\t.setTitle('Bot Information')\n\t\t\t.setThumbnail(this.client.user.displayAvatarURL({ size: 4096 }))\n\t\t\t.setColor('RANDOM')\n\t\t\t.addField(\n\t\t\t\t'General',\n\t\t\t\t[\n\t\t\t\t\t`**❯ Client:** ${this.client.user.tag} (${this.client.user.id})`,\n\t\t\t\t\t`**❯ Commands:** ${this.client.registry.commands.size}`,\n\t\t\t\t\t`**❯ Guilds:** ${this.client.guilds.cache.size.toLocaleString()}`,\n\t\t\t\t\t`**❯ Users:** ${this.client.guilds.cache\n\t\t\t\t\t\t.reduce((a, b) => a + b.memberCount, 0)\n\t\t\t\t\t\t.toLocaleString()}`,\n\t\t\t\t\t`**❯ Channels:** ${this.client.channels.cache.size.toLocaleString()}`,\n\t\t\t\t\t`**❯ Creation Date:** \\`${utc(this.client.user.createdTimestamp).format(\n\t\t\t\t\t\t'Do MMMM YYYY HH:mm:ss',\n\t\t\t\t\t)}\\``,\n\t\t\t\t\t`**❯ Node.js:** \\`${process.version}\\``,\n\t\t\t\t\t`**❯ Version:** \\`v${version}\\``,\n\t\t\t\t\t`**❯ Discord.js:** \\`v${djsVersion}\\``,\n\t\t\t\t\t`**❯ Commit Hash:** \\`${this.getCommitHash()}\\``,\n\t\t\t\t\t'**❯ Repository:** <https://github.com/1chiSensei/Tanaka>',\n\t\t\t\t\t'**❯ Invite:** <https://peico.xyz/BF60P>',\n\t\t\t\t\t`**❯ Support Server:** <${process.env.SUPPORT_SERVER}>`,\n\t\t\t\t\t'\\u200b',\n\t\t\t\t].join('\\n'),\n\t\t\t)\n\t\t\t.addField(\n\t\t\t\t'System',\n\t\t\t\t[\n\t\t\t\t\t`**❯ Uptime:** ${ms(os.uptime() * 1000, { long: true })}`,\n\t\t\t\t\t`**❯ Platform:** ${process.platform}`,\n\t\t\t\t\t`**❯ Arch:** ${process.arch}`,\n\t\t\t\t\t`**❯ CPU:**`,\n\t\t\t\t\t`\\u3000 Cores: ${os.cpus().length}`,\n\t\t\t\t\t`\\u3000 Model: ${core.model}`,\n\t\t\t\t\t`\\u3000 Speed: ${core.speed}MHz`,\n\t\t\t\t\t`**❯ Memory:**`,\n\t\t\t\t\t`\\u3000 Total: ${formatBytes(process.memoryUsage().heapTotal)}`,\n\t\t\t\t\t`\\u3000 Used: ${formatBytes(process.memoryUsage().heapUsed)}`,\n\t\t\t\t].join('\\n'),\n\t\t\t)\n\t\t\t.setTimestamp();\n\n\t\treturn msg.say(embed);\n\t}\n\n\tgetCommitHash() {\n\t\tconst commitHash = execSync('git rev-parse --short HEAD', { timeout: 15000, encoding: 'utf-8' });\n\n\t\treturn commitHash.trim();\n\t}\n};\n"]}