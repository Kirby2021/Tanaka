{"version":3,"sources":["Commands/info/info.js"],"names":["MessageEmbed","version","djsVersion","require","formatBytes","Command","exec","utc","os","ms","module","exports","InfoCommand","[object Object]","client","super","name","aliases","group","memberName","description","clientPermissions","msg","core","cpus","embed","setThumbnail","this","user","displayAvatarURL","size","setColor","addField","tag","id","registry","commands","guilds","cache","toLocaleString","reduce","a","b","memberCount","channels","createdTimestamp","format","process","getCommitHash","join","uptime","long","platform","arch","length","model","speed","memoryUsage","heapTotal","heapUsed","setTimestamp","say","commitHash","err","stdout","trim"],"mappings":"AAAA,MAAMA,aAAEA,aAAcC,QAASC,YAAeC,QAAQ,eAChDC,YAAEA,aAAgBD,QAAQ,0BAC1BF,QAAEA,SAAYE,QAAQ,0BACtBE,QAAEA,SAAYF,QAAQ,wBACtBG,KAAEA,MAASH,QAAQ,kBACnBI,IAAEA,KAAQJ,QAAQ,UAClBK,GAAKL,QAAQ,MACbM,GAAKN,QAAQ,MAEnBO,OAAOC,QAAU,MAAMC,oBAAoBP,QAC1CQ,YAAYC,GACXC,MAAMD,EAAQ,CACbE,KAAM,OACNC,QAAS,CAAC,WAAY,WACtBC,MAAO,OACPC,WAAY,OACZC,YAAa,oDACbC,kBAAmB,CAAC,iBAItBR,UAAUS,GACT,MAAMC,EAAOf,GAAGgB,OAAO,GACjBC,GAAQ,IAAIzB,cAChB0B,aAAaC,KAAKb,OAAOc,KAAKC,iBAAiB,CAAEC,KAAM,QACvDC,SAAS,UACTC,SACA,UACA,CACC,iBAAiBL,KAAKb,OAAOc,KAAKK,QAAQN,KAAKb,OAAOc,KAAKM,MAC3D,mBAAmBP,KAAKb,OAAOqB,SAASC,SAASN,OACjD,iBAAiBH,KAAKb,OAAOuB,OAAOC,MAAMR,KAAKS,mBAC/C,gBAAgBZ,KAAKb,OAAOuB,OAAOC,MACjCE,QAAO,CAACC,EAAGC,IAAMD,EAAIC,EAAEC,aAAa,GACpCJ,mBACF,mBAAmBZ,KAAKb,OAAO8B,SAASN,MAAMR,KAAKS,mBACnD,wBAAwBhC,IAAIoB,KAAKb,OAAOc,KAAKiB,kBAAkBC,OAC9D,2BAED,kBAAkBC,QAAQ9C,UAC1B,mBAAmBA,UACnB,sBAAsBC,aACtB,sBAAsByB,KAAKqB,kBAC3B,2DACA,KACCC,KAAK,OAEPjB,SACA,SACA,CACC,iBAAiBvB,GAAiB,IAAdD,GAAG0C,SAAiB,CAAEC,MAAM,MAChD,mBAAmBJ,QAAQK,WAC3B,eAAeL,QAAQM,OACvB,aACA,YAAiB7C,GAAGgB,OAAO8B,SAC3B,YAAiB/B,EAAKgC,QACtB,YAAiBhC,EAAKiC,WACtB,gBACA,YAAiBpD,YAAY2C,QAAQU,cAAcC,aACnD,WAAgBtD,YAAY2C,QAAQU,cAAcE,aACjDV,KAAK,OAEPW,eAEF,OAAOtC,EAAIuC,IAAIpC,GAGhBZ,gBACC,IAAIiD,EAUJ,OARAxD,KAAK,8BAA8B,CAACyD,EAAKC,KACpCD,IACHD,EAAa,WAGdA,EAAaE,EAAOC,UAGdH","file":"info.js","sourcesContent":["const { MessageEmbed, version: djsVersion } = require('discord.js');\nconst { formatBytes } = require('../../Structures/Util');\nconst { version } = require('../../../package.json');\nconst { Command } = require('discord.js-commando');\nconst { exec } = require('child_process');\nconst { utc } = require('moment');\nconst os = require('os');\nconst ms = require('ms');\n\nmodule.exports = class InfoCommand extends Command {\n\tconstructor(client) {\n\t\tsuper(client, {\n\t\t\tname: 'info',\n\t\t\taliases: ['bot-info', 'botinfo'],\n\t\t\tgroup: 'info',\n\t\t\tmemberName: 'info',\n\t\t\tdescription: 'Responds with the general information of the bot.',\n\t\t\tclientPermissions: ['EMBED_LINKS'],\n\t\t});\n\t}\n\n\tasync run(msg) {\n\t\tconst core = os.cpus()[0];\n\t\tconst embed = new MessageEmbed()\n\t\t\t.setThumbnail(this.client.user.displayAvatarURL({ size: 4096 }))\n\t\t\t.setColor('RANDOM')\n\t\t\t.addField(\n\t\t\t\t'General',\n\t\t\t\t[\n\t\t\t\t\t`**❯ Client:** ${this.client.user.tag} (${this.client.user.id})`,\n\t\t\t\t\t`**❯ Commands:** ${this.client.registry.commands.size}`,\n\t\t\t\t\t`**❯ Guilds:** ${this.client.guilds.cache.size.toLocaleString()}`,\n\t\t\t\t\t`**❯ Users:** ${this.client.guilds.cache\n\t\t\t\t\t\t.reduce((a, b) => a + b.memberCount, 0)\n\t\t\t\t\t\t.toLocaleString()}`,\n\t\t\t\t\t`**❯ Channels:** ${this.client.channels.cache.size.toLocaleString()}`,\n\t\t\t\t\t`**❯ Creation Date:** ${utc(this.client.user.createdTimestamp).format(\n\t\t\t\t\t\t'Do MMMM YYYY HH:mm:ss',\n\t\t\t\t\t)}`,\n\t\t\t\t\t`**❯ Node.js:** ${process.version}`,\n\t\t\t\t\t`**❯ Version:** v${version}`,\n\t\t\t\t\t`**❯ Discord.js:** v${djsVersion}`,\n\t\t\t\t\t`**❯ Commit Hash:** ${this.getCommitHash()}`,\n\t\t\t\t\t'**❯ Repository:** <https://github.com/1chiSensei/Tanaka>',\n\t\t\t\t\t'\\u200b',\n\t\t\t\t].join('\\n'),\n\t\t\t)\n\t\t\t.addField(\n\t\t\t\t'System',\n\t\t\t\t[\n\t\t\t\t\t`**❯ Uptime:** ${ms(os.uptime() * 1000, { long: true })}`,\n\t\t\t\t\t`**❯ Platform:** ${process.platform}`,\n\t\t\t\t\t`**❯ Arch:** ${process.arch}`,\n\t\t\t\t\t`**❯ CPU:**`,\n\t\t\t\t\t`\\u3000 Cores: ${os.cpus().length}`,\n\t\t\t\t\t`\\u3000 Model: ${core.model}`,\n\t\t\t\t\t`\\u3000 Speed: ${core.speed}MHz`,\n\t\t\t\t\t`**❯ Memory:**`,\n\t\t\t\t\t`\\u3000 Total: ${formatBytes(process.memoryUsage().heapTotal)}`,\n\t\t\t\t\t`\\u3000 Used: ${formatBytes(process.memoryUsage().heapUsed)}`,\n\t\t\t\t].join('\\n'),\n\t\t\t)\n\t\t\t.setTimestamp();\n\n\t\treturn msg.say(embed);\n\t}\n\n\tgetCommitHash() {\n\t\tlet commitHash;\n\n\t\texec('git rev-parse --short HEAD', (err, stdout) => {\n\t\t\tif (err) {\n\t\t\t\tcommitHash = 'Unknown';\n\t\t\t}\n\n\t\t\tcommitHash = stdout.trim();\n\t\t});\n\n\t\treturn commitHash;\n\t}\n};\n"]}