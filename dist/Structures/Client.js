const{Intents:Intents,WebhookClient:WebhookClient,Collection:Collection}=require("discord.js"),{CommandoClient:CommandoClient}=require("discord.js-commando"),KeyvProvider=require("commando-provider-keyv"),{FeedEmitter:FeedEmitter}=require("rss-emitter-ts"),TimerManager=require("./TimerManager"),{execSync:execSync}=require("child_process"),{Manager:Manager}=require("erela.js"),glob=require("glob-promise"),Turndown=require("turndown"),BotList=require("./BotList"),logger=require("./Logger"),Redis=require("./Redis"),web=require("../Web"),Keyv=require("keyv"),path=require("path");module.exports=class extends CommandoClient{constructor(e){super({commandPrefix:process.env.COMMAND_PREFIX,owner:process.env.OWNER_ID,intents:[Intents.NON_PRIVILEGED,Intents.FLAGS.GUILDS],partials:["CHANNEL"],...e}),this.db=new Keyv(process.env.DATABASE_URL),this.logger=logger,this.rss=new FeedEmitter,this.testWebhook=new WebhookClient(process.env.TEST_WEBHOOK_ID,process.env.TEST_WEBHOOK_TOKEN),this.redis=new Redis(this).db,this.timers=new TimerManager(this),this.converter=new Turndown,this.bl=new BotList(this),this.client=this,this.manager=new Manager({send:(e,r)=>{const n=this.guilds.cache.get(e);n&&n.shard.send(r)}}),this.events=new Collection}get ip(){return execSync("curl https://ipecho.net/plain",{timeout:3e4,encoding:"utf-8"})}get directory(){return`${path.dirname(require.main.filename)}${path.sep}`}async userCount(){if(this.shard){return(await this.shard.broadcastEval("this.guilds.cache.reduce((a, b) => a + b.memberCount, 0)")).reduce(((e,r)=>e+r),0)}return this.guilds.cache.reduce(((e,r)=>e+r.memberCount),0)}async guildCount(){if(this.shard){return(await this.shard.fetchClientValues("guilds.cache.size")).reduce(((e,r)=>e+r),0)}return this.guilds.cache.size}async channelCount(){if(this.shard){return(await this.shard.fetchClientValues("channels.cache.size")).reduce(((e,r)=>e+r),0)}return this.channels.cache.size}async login(e=process.env.DISCORD_TOKEN){return this.addRSSListeners(),this.registerCommands(),this.registerProvider(),web(this),await this.loadEvents(),super.login(e)}async loadEvents(){const e=await glob(`${this.directory}Events/**/*.js`);for(const r of e){delete require.cache[r];const e=new(require(r))(this.client);this.events.set(e.name,e),e.emitter[e.type](e.name,((...r)=>e.run(...r)))}}addRSSListeners(){[{url:"https://www.animenewsnetwork.com/all/rss.xml?ann-edition=us",refresh:2e4,eventName:"anime",ignoreFirst:!0}].forEach((e=>this.rss.add(e)))}generateCommandList(){return this.registry.groups.map((e=>{const r=e.commands.filter((e=>!e.hidden));return`\n<h3>${e.name}:</h3>\n\n<ul>${r.map((e=>{const r=`${e.ownerOnly?" (Owner-Only)":""}${e.nsfw?" (NSFW)":""}`;return`<li> <strong>${e.name}:</strong> ${e.description}${r}</li>`})).join("</ul>\n")}`})).join("\n")}registerCommands(){this.client.registry.registerDefaultTypes().registerGroups([{id:"util",name:"Utility",guarded:!0},{id:"random",name:"Random Response"},{id:"info",name:"Information"},{id:"search",name:"Search"},{id:"remind",name:"Reminder"},{id:"anime-updates",name:"Anime Updates"},{id:"codebin",name:"Code Bins"},{id:"img",name:"Image Manipulation"},{id:"music",name:"Music"}]).registerDefaultGroups().registerDefaultCommands({unknownCommand:!1,help:!1,eval:!1,ping:!1}).registerTypesIn(path.join(__dirname,"..","Types")).registerCommandsIn(path.join(__dirname,"..","Commands"))}registerProvider(){this.setProvider(new KeyvProvider(this.db))}};
//# sourceMappingURL=Client.js.map
