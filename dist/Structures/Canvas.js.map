{"version":3,"sources":["Structures/Canvas.js"],"names":["distort","ctx","amplitude","x","y","width","height","strideLevel","data","getImageData","temp","stride","i","j","xs","Math","round","sin","PI","dest","src","putImageData","drawImageWithTint","image","color","fillStyle","globalAlpha","drawImage","fillRect","module","exports"],"mappings":"AAAA,MAAMA,QAAU,CAACC,EAAKC,EAAWC,EAAGC,EAAGC,EAAOC,EAAQC,EAAc,KACnE,MAAMC,EAAOP,EAAIQ,aAAaN,EAAGC,EAAGC,EAAOC,GACrCI,EAAOT,EAAIQ,aAAaN,EAAGC,EAAGC,EAAOC,GACrCK,EAASN,EAAQE,EAEvB,IAAK,IAAIK,EAAI,EAAGA,EAAIP,EAAOO,IAC1B,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAQO,IAAK,CAChC,MAAMC,EAAKC,KAAKC,MAAMd,EAAYa,KAAKE,IAAI,EAAIF,KAAKG,GAAK,GAAKL,EAAIP,KAE5Da,EAAON,EAAIF,EAASC,EAAIL,EACxBa,GAAOP,EAFFE,KAAKC,MAAMd,EAAYa,KAAKE,IAAI,EAAIF,KAAKG,GAAK,GAAKL,EAAIR,MAE3CM,GAAUC,EAAIE,GAAMP,EAE3CC,EAAKA,KAAKW,GAAQT,EAAKF,KAAKY,GAC5BZ,EAAKA,KAAKW,EAAO,GAAKT,EAAKF,KAAKY,EAAM,GACtCZ,EAAKA,KAAKW,EAAO,GAAKT,EAAKF,KAAKY,EAAM,GAMxC,OAFAnB,EAAIoB,aAAab,EAAML,EAAGC,GAEnBH,GAGFqB,kBAAoB,CAACrB,EAAKsB,EAAOC,EAAOrB,EAAGC,EAAGC,EAAOC,KAC1D,MAAMmB,UAAEA,EAASC,YAAEA,GAAgBzB,EAEnCA,EAAIwB,UAAYD,EAChBvB,EAAI0B,UAAUJ,EAAOpB,EAAGC,EAAGC,EAAOC,GAClCL,EAAIyB,YAAc,GAClBzB,EAAI2B,SAASzB,EAAGC,EAAGC,EAAOC,GAC1BL,EAAIwB,UAAYA,EAChBxB,EAAIyB,YAAcA,GAGnBG,OAAOC,QAAU,CAChB9B,QAAAA,QACAsB,kBAAAA","file":"Canvas.js","sourcesContent":["const distort = (ctx, amplitude, x, y, width, height, strideLevel = 4) => {\n\tconst data = ctx.getImageData(x, y, width, height);\n\tconst temp = ctx.getImageData(x, y, width, height);\n\tconst stride = width * strideLevel;\n\n\tfor (let i = 0; i < width; i++) {\n\t\tfor (let j = 0; j < height; j++) {\n\t\t\tconst xs = Math.round(amplitude * Math.sin(2 * Math.PI * 3 * (j / height)));\n\t\t\tconst ys = Math.round(amplitude * Math.sin(2 * Math.PI * 3 * (j / width)));\n\t\t\tconst dest = j * stride + i * strideLevel;\n\t\t\tconst src = (j + ys) * stride + (i + xs) * strideLevel;\n\n\t\t\tdata.data[dest] = temp.data[src];\n\t\t\tdata.data[dest + 1] = temp.data[src + 1];\n\t\t\tdata.data[dest + 2] = temp.data[src + 2];\n\t\t}\n\t}\n\n\tctx.putImageData(data, x, y);\n\n\treturn ctx;\n};\n\nconst drawImageWithTint = (ctx, image, color, x, y, width, height) => {\n\tconst { fillStyle, globalAlpha } = ctx;\n\n\tctx.fillStyle = color;\n\tctx.drawImage(image, x, y, width, height);\n\tctx.globalAlpha = 0.5;\n\tctx.fillRect(x, y, width, height);\n\tctx.fillStyle = fillStyle;\n\tctx.globalAlpha = globalAlpha;\n};\n\nmodule.exports = {\n\tdistort,\n\tdrawImageWithTint,\n};\n"]}