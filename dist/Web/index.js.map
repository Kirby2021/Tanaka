{"version":3,"sources":["Web/index.js"],"names":["MessageEmbed","WebhookClient","require","Client","express","cookies","helmet","morgan","path","cors","app","client","id","process","env","CLIENT_ID","secret","CLIENT_SECRET","redirectURI","scopes","port","PORT","hook","VOTE_ID","VOTE_TOKEN","module","exports","c","use","contentSecurityPolicy","frameguard","json","urlencoded","extended","text","static","join","__dirname","set","get","async","req","res","key","userCount","toLocaleString","guildCount","channelCount","commandCount","registry","commands","size","shardCount","shard","ping","Math","round","ws","data","getUser","render","_","redirect","generateCommandList","moment","authCodeLink","url","code","query","toString","getAccess","cookie","clearCookie","undefined","post","header","VOTE_AUTH","sendStatus","userID","body","user","users","fetch","embed","setTitle","setURL","setDescription","tag","setColor","setFooter","setTimestamp","send","listen","logger","info"],"mappings":"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","file":"index.js","sourcesContent":["const { MessageEmbed, WebhookClient } = require('discord.js');\nconst { Client } = require('@2pg/oauth');\nconst express = require('express');\nconst cookies = require('cookies');\nconst helmet = require('helmet');\nconst morgan = require('morgan');\nconst path = require('path');\nconst cors = require('cors');\n\nconst app = express();\nconst client = new Client({\n\tid: process.env.CLIENT_ID,\n\tsecret: process.env.CLIENT_SECRET,\n\tredirectURI: 'https://tanaka-bot.me/auth/callback',\n\tscopes: ['identify'],\n});\nconst port = process.env.PORT;\nconst hook = new WebhookClient(process.env.VOTE_ID, process.env.VOTE_TOKEN);\n\n// eslint-disable-next-line valid-jsdoc\n/**\n *  @param {import('../Structures/Client')} c The client\n */\nmodule.exports = (c) => {\n\tapp.use(cors());\n\tapp.use(helmet({ contentSecurityPolicy: false, frameguard: false }));\n\tapp.use(express.json());\n\tapp.use(express.urlencoded({ extended: true }));\n\tapp.use(express.text());\n\tapp.use(cookies.express(['I', 'store', 'login', 'sessions.']));\n\tapp.use(morgan('combined'));\n\tapp.use('/static', express.static(path.join(__dirname, 'static')));\n\n\tapp.set('view engine', 'ejs');\n\tapp.set('trust proxy', true);\n\tapp.set('json spaces', 8);\n\tapp.set('views', path.join(__dirname, 'views'));\n\n\tapp.get('/', async (req, res) => {\n\t\tconst key = req.cookies.get('discordToken');\n\n\t\tconst userCount = (await c.userCount()).toLocaleString();\n\t\tconst guildCount = (await c.guildCount()).toLocaleString();\n\t\tconst channelCount = (await c.channelCount()).toLocaleString();\n\t\tconst commandCount = c.registry.commands.size.toLocaleString();\n\t\tconst shardCount = c.shard ? c.shard.shardCount.toLocaleString() : '1';\n\t\tconst ping = Math.round(c.ws.ping);\n\n\t\tconst data = key ? await client.getUser(key) : null;\n\n\t\tres.render('index', {\n\t\t\tdata,\n\t\t\tuserCount,\n\t\t\tguildCount,\n\t\t\tchannelCount,\n\t\t\tcommandCount,\n\t\t\tshardCount,\n\t\t\tping,\n\t\t});\n\t});\n\n\tapp.get('/invite', (_, res) =>\n\t\tres.redirect(\n\t\t\t302,\n\t\t\t'https://discord.com/api/oauth2/authorize?client_id=804605929944645672&permissions=641064257&redirect_uri=https%3A%2F%2Ftanaka.1chi.tk%2Fauth%2Fcallback&response_type=code&scope=identify%20bot',\n\t\t),\n\t);\n\n\tapp.get('/discord', (_, res) => res.redirect(302, 'https://discord.gg/zGvtAnGhdP'));\n\n\tapp.get('/github', (_, res) => res.redirect(302, 'https://github.com/1chiSensei/Tanaka'));\n\n\tapp.get('/commands', async (req, res) => {\n\t\tconst key = req.cookies.get('discordToken');\n\n\t\tres.render('commands', {\n\t\t\tdata: key ? await client.getUser(key) : null,\n\t\t\tcommands: c.generateCommandList(),\n\t\t});\n\t});\n\n\tapp.get('/legal', async (req, res) => {\n\t\tconst key = req.cookies.get('discordToken');\n\n\t\tres.render('legal', { data: key ? await client.getUser(key) : null });\n\t});\n\n\tapp.get('/vote', (_, res) => res.render('vote'));\n\n\tapp.get('/profile', async (req, res) => {\n\t\tconst key = req.cookies.get('discordToken');\n\n\t\tres.render('profile', {\n\t\t\tdata: key ? await client.getUser(key) : null,\n\t\t\tmoment: require('moment'),\n\t\t});\n\t});\n\n\tapp.get('/auth/login', (_, res) => res.redirect(302, client.authCodeLink.url));\n\n\tapp.get('/auth/callback', async (req, res) => {\n\t\tif (req.cookies.get('discordToken')) return res.redirect(302, '/');\n\n\t\tconst code = req.query.code.toString();\n\t\tconst key = await client.getAccess(code);\n\n\t\tres.cookie('discordToken', key).redirect('/');\n\t});\n\n\tapp.get('/auth/logout', (_, res) => {\n\t\tres.clearCookie('discordToken', undefined);\n\n\t\tres.redirect(302, '/');\n\t});\n\n\tapp.post('/vote/ibl', async (req, res) => {\n\t\tif (req.header('Authorization') !== process.env.VOTE_AUTH) {\n\t\t\tif (req.cookies.get('discordToken')) return res.sendStatus(403);\n\t\t\treturn res.sendStatus(401);\n\t\t}\n\n\t\tconst { userID } = req.body;\n\t\tconst user = await c.users.fetch(userID);\n\t\tconst embed = new MessageEmbed()\n\t\t\t.setTitle('New Vote!')\n\t\t\t.setURL('https://infinitybotlist.com/bots/804605929944645672')\n\t\t\t.setDescription(`Thank you, ${user.tag}, for voting for Tanaka in Infinity Bot List!`)\n\t\t\t.setColor('RANDOM')\n\t\t\t.setFooter('infinitybotlist.com')\n\t\t\t.setTimestamp();\n\n\t\tawait hook.send(embed);\n\n\t\tres.sendStatus(201);\n\t});\n\n\tapp.listen(port, () => c.logger.info(`Listening on localhost:${port}`));\n};\n"]}