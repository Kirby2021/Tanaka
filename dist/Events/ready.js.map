{"version":3,"sources":["Events/ready.js"],"names":["Event","require","module","exports","[object Object]","args","super","once","this","client","setTimeout","manager","init","user","id","timers","fetchAll","shard","shards","setInterval","setActivity","type","shardID","Number","logger","info","tag"],"mappings":"AAAA,MAAMA,MAAQC,QAAQ,uBAEtBC,OAAOC,QAAU,cAAyBH,MACzCI,eAAeC,GACdC,SAASD,EAAM,QAAS,CAAEE,MAAM,IAGjCH,YACCI,KAAKC,OAAOC,YAAW,IAAMF,KAAKC,OAAOE,QAAQC,KAAKJ,KAAKC,OAAOI,KAAKC,KAAK,WAEtEN,KAAKC,OAAOM,OAAOC,WAEzB,IAAK,MAAMC,KAAST,KAAKC,OAAOQ,MAAMC,OACrCV,KAAKC,OAAOU,aAAY,IACvBX,KAAKC,OAAOI,KAAKO,YAAY,kBAAkBH,IAAS,CACvDI,KAAM,WACNC,QAASC,OAAON,OAKnBT,KAAKC,OAAOe,OAAOC,KAAK,gBAAgBjB,KAAKC,OAAOI,KAAKa","file":"ready.js","sourcesContent":["const Event = require('../Structures/Event');\n\nmodule.exports = class ReadyEvent extends Event {\n\tconstructor(...args) {\n\t\tsuper(...args, 'ready', { once: true });\n\t}\n\n\tasync run() {\n\t\tthis.client.setTimeout(() => this.client.manager.init(this.client.user.id), 5000);\n\n\t\tawait this.client.timers.fetchAll();\n\n\t\tfor (const shard of this.client.shard.shards) {\n\t\t\tthis.client.setInterval(() =>\n\t\t\t\tthis.client.user.setActivity(`t!help | Shard ${shard}`, {\n\t\t\t\t\ttype: 'WATCHING',\n\t\t\t\t\tshardID: Number(shard),\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\tthis.client.logger.info(`Logged in as ${this.client.user.tag}.`);\n\t}\n};\n"]}